{"version":3,"sources":["utils/DateUtils.js","component/Composed.js","component/ComparedMetrics.js","component/TableRenderer.js","component/DataTable.js","component/ClusterMap.js","component/index.js","App.js","serviceWorker.js","index.js"],"names":["DateDifference","start_date","end_date","date1_ms","Date","getTime","difference_ms","Math","round","Example","props","default_start_date","default_end_date","stats_daily_url","stats_hourly_url","filter_type","state","stats","myRef","React","createRef","myRef2","filter_type_ref","changeDate","bind","changeType","alert","base_url","this","axios","get","then","res","data","error","console","forEach","item","impressions","revenue","setState","getData","e","preventDefault","log","current","f","value","target","onSubmit","type","ref","onChange","name","width","height","margin","top","right","bottom","left","stroke","dataKey","label","position","offset","angle","barSize","PureComponent","default_start_date2","default_end_date2","metrics","start_date_ref","end_date_ref","start_date_ref2","end_date_ref2","metrics_ref","changeMetrics","start_date2","end_date2","day_difference","day_difference2","req1","req2","all","spread","responses","index","clicks","fill","CustomSearchRender","handleTextChange","event","onSearch","onKeyDown","keyCode","onHide","onKeyUp","clear","document","addEventListener","removeEventListener","classes","options","searchText","Grow","appear","in","timeout","className","main","el","rootRef","TextField","placeholder","InputProps","textLabels","toolbar","search","fullWidth","inputRef","searchField","IconButton","clearIcon","onClick","Component","withStyles","theme","display","flex","color","palette","updateState","text","searched_rows","Row","style","newProps","query","poi_name","toLowerCase","toString","indexOf","events","TableExample","poi_url","columns","filter","selectableRows","selectableRowsHeader","filterType","responsive","rowsPerPage","page","print","download","rowsPerPageOptions","caseSensitive","onTableChange","action","tableState","customSearch","searchQuery","currentRow","highlightRow","customSearchRender","handleSearch","hideSearch","clearSearch","customRowRender","key","poi","push","title","require","compose","withProps","withHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","MarkerClusterer","MapWithAMarkerClusterer","googleMapURL","loadingElement","containerElement","mapElement","onMarkerClustererClick","markerClusterer","defaultZoom","defaultCenter","lat","lng","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","poi_id","lon","composedWrapper","composed","ComparedMetrics","dataTableWapper","DataTable","clusterMap","ClusterMap","default_min_revenue","default_max_revenue","default_min_events","default_max_events","max_revenue_ref","min_revenue_ref","max_events_ref","min_events_ref","filterServer","min_revenue","max_revenue","min_events","max_events","JSON","stringify","isNaN","parseInt","App","items","Object","keys","components","group","list","c","to","pathname","createElement","location","exec","component","length","renderPageDetail","renderList","Boolean","window","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d0ee188.chunk.js","sourcesContent":["// import React, { Component } from 'react'\n\nexport function DateDifference(start_date, end_date) {\n  var one_day=1000*60*60*24;\n  var date1_ms = (new Date(start_date)).getTime();\n  var date2_ms = (new Date(end_date)).getTime();\n\n  var difference_ms = date2_ms - date1_ms;\n\n  return Math.round(difference_ms/one_day);\n}","import React, { PureComponent } from 'react';\nimport {\n  ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip,\n  Legend,\n} from 'recharts';\nimport axios from 'axios';\nimport {DateDifference} from '../utils/DateUtils'\n\nexport default class Example extends PureComponent {\n    default_start_date = '2017-01-01'\n    default_end_date = '2017-01-07'\n    stats_daily_url = 'https://xianliflc-ws-product-python.glitch.me/stats/daily'\n    stats_hourly_url = 'https://xianliflc-ws-product-python.glitch.me/stats/hourly'\n    filter_type = 'daily'\n\n\tconstructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.myRef2 = React.createRef();\n        this.filter_type_ref = React.createRef();\n        this.changeDate = this.changeDate.bind(this)\n        this.changeType = this.changeType.bind(this)\n\t}\n\n    state = {\n        stats: [],\n    }\n\n    getData(start_date, end_date) {\n        const day_difference = DateDifference(start_date, end_date) + 1\n        if (day_difference > 7) {\n            alert('Range should be maximum of 7 days')\n            return\n        }\n        const base_url = this.filter_type === 'daily' ? this.stats_daily_url : this.stats_hourly_url\n        axios.get(`${base_url}?start_date=${start_date}&end_date=${end_date}`)\n            .then(res => {\n                if (res.data.data.error) {\n                    console.error(res.data.data.error)\n                }\n                res.data.data.forEach(item => {\n                    item.impressions = Math.round(item.impressions / 100)\n                    item.revenue = Math.round(item.revenue)\n                })\n\n            const stats = res.data.data;\n            this.setState({ stats });\n            \n        })\n    }\n\n    componentDidMount() {\n        this.getData(this.default_start_date, this.default_end_date, this.filter_type)\n    }\n\n    changeDate(e) {\n        e.preventDefault()\n        console.log(this.filter_type_ref, this.filter_type_ref.current.f)\n        this.getData(this.myRef.current.value, this.myRef2.current.value)\n    }\n\n    changeType(e) {\n        this.filter_type = e.target.value\n    }\n\n  render() {\n    return (\n        <div>\n            <form onSubmit={this.changeDate}>\n                <div>\n                    <input type=\"date\" ref={this.myRef} />\n                    <input type=\"date\" ref={this.myRef2} />\n                </div>\n                <div ref={this.filter_type_ref} onChange={this.changeType}>\n                    <input type=\"radio\" name=\"type\" value=\"daily\" /> daily\n                    <input type=\"radio\" name=\"type\" value=\"hourly\" /> hourly\n                </div>\n                <button type=\"submit\"> Submit </button>\n            </form>\n            <ComposedChart\n                width={1000}\n                height={900}\n                data={this.state.stats}\n                margin={{\n                top: 50, right: 80, bottom: 25, left: 50,\n                }}\n            >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis dataKey={this.filter_type === 'daily'? 'date' : 'hour'}\n                label={{ value: this.filter_type === 'daily'? 'Day' : 'Hour', position: 'insideBottomRight', offset: 0 }} />\n                <YAxis label={{ value: 'impressions (x100)', angle: -90, position: 'insideTopLeft' }} />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"impressions\" stroke=\"#8884d8\" />\n                <Line dataKey=\"clicks\" barSize={20} stroke=\"#413ea0\" />\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#ff7300\" />\n            </ComposedChart>\n        </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip,\n  Legend,\n} from 'recharts';\nimport axios from 'axios';\nimport {DateDifference} from '../utils/DateUtils'\n\nexport default class Example extends PureComponent {\n    default_start_date = '2017-01-01'\n    default_end_date = '2017-01-03'\n    default_start_date2 = '2017-01-04'\n    default_end_date2 = '2017-01-06'\n    stats_daily_url = 'https://xianliflc-ws-product-python.glitch.me/stats/daily'\n    stats_hourly_url = 'https://xianliflc-ws-product-python.glitch.me/stats/hourly'\n    filter_type = 'daily'\n    metrics = 'revenue'\n\n\tconstructor(props) {\n        super(props);\n        this.start_date_ref = React.createRef();\n        this.end_date_ref = React.createRef();\n        this.start_date_ref2 = React.createRef();\n        this.end_date_ref2 = React.createRef();\n        this.filter_type_ref = React.createRef();\n        this.metrics_ref = React.createRef();\n        this.changeDate = this.changeDate.bind(this)\n        this.changeType = this.changeType.bind(this)\n        this.changeMetrics = this.changeMetrics.bind(this)\n\t}\n\n    state = {\n        stats: [],\n    }\n\n    getData(start_date, end_date, start_date2, end_date2) {\n        const day_difference = DateDifference(start_date, end_date) + 1\n        if (day_difference > 5) {\n            alert('Range should be maximum of 5 days')\n            return\n        }\n\n        const day_difference2 = DateDifference(start_date2, end_date2) + 1\n        if (day_difference2 > 5) {\n            alert('Compared date range should be maximum of 5 days')\n            return\n        }\n\n        if (day_difference !== day_difference2) {\n            alert('Compared date ranges do not have the same length')\n            return\n        }\n        const base_url = this.filter_type === 'daily' ? this.stats_daily_url : this.stats_hourly_url\n        const req1 = axios.get(`${base_url}?start_date=${start_date}&end_date=${end_date}`)\n        const req2 = axios.get(`${base_url}?start_date=${start_date2}&end_date=${end_date2}`)\n        axios.all([req1, req2]) \n        .then(axios.spread((...responses) => {\n\n            if (responses[0].data.data.error) {\n                console.error(responses[0].data.data.error)\n            }\n\n            if (responses[1].data.data.error) {\n                console.error(responses[1].data.data.error)\n            }\n            responses[0].data.data.forEach(item => {\n                item.impressions = Math.round(item.impressions / 1000)\n                item.revenue = Math.round(item.revenue)\n            })\n\n            let stats = responses[0].data.data;\n\n            responses[1].data.data.forEach((item, index) => {\n                stats[index]['impressions2'] = Math.round(item.impressions / 1000)\n                stats[index]['revenue2'] = Math.round(item.revenue)\n                stats[index]['clicks2'] = item.clicks\n            })\n            \n            this.setState({ stats})\n            \n        }))\n    }\n\n    componentDidMount() {\n        this.getData(\n            this.default_start_date,\n            this.default_end_date,\n            this.default_start_date2,\n            this.default_end_date2\n        )\n    }\n\n    changeDate(e) {\n        e.preventDefault()\n        console.log(this.filter_type_ref, this.filter_type_ref.current.f)\n        this.getData(\n            this.start_date_ref.current.value,\n            this.end_date_ref.current.value,\n            this.start_date_ref2.current.value,\n            this.end_date_ref2.current.value\n        )\n    }\n\n    changeType(e) {\n        this.filter_type = e.target.value\n    }\n\n    changeMetrics(e) {\n        this.metrics = e.target.value\n    }\n\n  render() {\n    return (\n        <div>\n            <form onSubmit={this.changeDate}>\n                <div>\n                    <input type=\"date\" ref={this.start_date_ref} />\n                    <input type=\"date\" ref={this.end_date_ref} /> \n                </div>\n                compared to \n                <div>\n                    <input type=\"date\" ref={this.start_date_ref2} />\n                    <input type=\"date\" ref={this.end_date_ref2} />\n                </div>\n                <div ref={this.metrics_ref} onChange={this.changeMetrics}>\n                    <input type=\"radio\" name=\"metrics\" value=\"clicks\" /> clicks\n                    <input type=\"radio\" name=\"metrics\" value=\"impressions\" /> impressions\n                    <input type=\"radio\" name=\"metrics\" value=\"revenue\" /> revenue\n                </div>\n                <div ref={this.filter_type_ref} onChange={this.changeType}>\n                    <input type=\"radio\" name=\"type\" value=\"daily\" /> daily\n                    <input type=\"radio\" name=\"type\" value=\"hourly\" /> hourly\n                </div>\n                <button type=\"submit\"> Submit </button>\n            </form>\n            <ComposedChart\n                width={1200}\n                height={1000}\n                data={this.state.stats}\n                margin={{\n                top: 50, right: 80, bottom: 25, left: 50,\n                }}\n            >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis dataKey={this.filter_type === 'daily'? 'date' : 'hour'}\n                    label={{ value: this.filter_type === 'daily'? 'Day' : 'Hour', position: 'insideBottomRight', offset: 0 }} />\n                <YAxis label={{ value: this.metrics, angle: -90, position: 'insideTopLeft' }} />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey={this.metrics} barSize={12} fill=\"#413ea0\" />\n                <Bar dataKey={this.metrics + '2'} barSize={12} fill=\"#ff7300\" />\n            </ComposedChart>\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport Grow from '@material-ui/core/Grow';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst defaultSearchStyles = theme => ({\n    main: {\n        display: 'flex',\n        flex: '1 0 auto',\n    },\n    searchText: {\n        flex: '0.8 0',\n    },\n    clearIcon: {\n        '&:hover': {\n            color: theme.palette.error.main,\n        },\n    },\n});\n\nclass CustomSearchRender extends React.Component {\n    handleTextChange = event => {\n        // console.log(event.target, event.target.value)\n        this.props.onSearch(event.target.value);\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.props.onHide();\n        }\n    };\n\n    onKeyUp = event => {\n\n        if (event.keyCode === 8 && event.target.value === '') {\n            this.handleTextChange(event)\n            this.props.clear()\n        }\n    };\n\n    render() {\n        const { classes, options, onHide, searchText } = this.props;\n\n        return (\n        <Grow appear in={true} timeout={300}>\n            <div className={classes.main} ref={el => (this.rootRef = el)}>\n            <TextField\n                placeholder={'Search...'}\n                className={classes.searchText}\n                InputProps={{\n                    'aria-label': options.textLabels.toolbar.search,\n                }}\n                value={searchText || ''}\n                onChange={this.handleTextChange}\n                onKeyUp={this.onKeyUp}\n                fullWidth={true}\n                inputRef={el => (this.searchField = el)}\n            />\n            <IconButton className={classes.clearIcon} onClick={onHide}>\n                <ClearIcon />\n            </IconButton>\n            </div>\n        </Grow>\n        );\n    }\n}\n\nexport default withStyles(defaultSearchStyles, { name: 'CustomSearchRender' })(CustomSearchRender);","import React from 'react';\nimport MUIDataTable from 'mui-datatables';\nimport CustomSearchRender from './TableRenderer';\nimport axios from 'axios';\nfunction updateState(text){\n    console.log(text)\n    this.setState({searched_rows: text})\n}\n\nclass Row extends React.Component {\n\n    state = {\n        style: {'backgroundColor': '#ededed'},\n        searched_rows: '',\n        clear: false\n    }\n    \n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef()\n        updateState = updateState.bind(this)\n    }\n\n    componentWillReceiveProps(newProps){\n        this.setState({searched_rows: newProps.query})\n    }\n\n    shouldComponentUpdate(){\n        return true\n    }\n\n    render () {\n        return (\n            <tr ref={this.myRef} style=\n                { (this.props.query && this.props.query !== '' && this.props.poi_name.toLowerCase().toString().indexOf(this.props.query.toLowerCase()) >= 0) ? \n                    {'backgroundColor': '#ff00ff'}\n                    :\n                    this.state.style\n                    \n                }>\n                <td></td>\n                <td>\n                    {this.props.poi_name}\n                </td>\n                <td>\n                    {this.props.events}\n                </td>\n                <td>\n                    {this.props.revenue}\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default class TableExample extends React.Component {\n    poi_url = 'https://xianliflc-ws-product-python.glitch.me/poi?include=revenue,events'\n    columns = [\n        {\n            'name':'POI Name',\n            'searchable': true,\n        }, \n        {\n            'name': 'No. of events',\n            'searchable': false,\n        },\n        {\n            'name': 'Revenue $',\n            'searchable': false,\n        }];\n    options = {\n        filter: true,\n        selectableRows: true,\n        selectableRowsHeader: false,\n        filterType: 'dropdown',\n        responsive: 'stacked',\n        rowsPerPage: 20,\n        page: 1,\n        print: false,\n        download: false,\n        rowsPerPageOptions: [],\n        caseSensitive: false,\n        onTableChange: (action, tableState) => {\n            // console.log(action, tableState, this.state)\n        },\n        customSearch: (searchQuery, currentRow, columns) => {\n            this.highlightRow(searchQuery)\n\n            return true\n        },\n        customSearchRender: (searchText, handleSearch, hideSearch, options) => {\n            return (\n                <CustomSearchRender\n                    searchText={searchText}\n                    onSearch={handleSearch}\n                    onHide={hideSearch}\n                    options={options}\n                    clear={this.clearSearch.bind(this)}\n                />\n            );\n        },\n        customRowRender: data => {\n            const [ poi_name, events, revenue] = data;\n\n            return (\n                <Row \n                    key={poi_name}\n                    poi_name={poi_name}\n                    events={events}\n                    revenue={revenue}\n                    query={this.state.searched_rows}\n                />\n            );\n        }\n    }\n\n    state = {\n        poi: []\n    }\n\n    clearSearch() {\n        this.setState({clear: true, searched_rows: ''})\n    }\n\n    highlightRow(text) {\n        this.setState({searched_rows: text, clear: false})\n    }\n\n    getData() {\n        axios.get(`${this.poi_url}`)\n        .then(res => {\n            let poi = []\n            if (res.data.data.error) {\n                console.error(res.data.data.error)\n            }\n    \n            res.data.data.forEach(item => {\n                poi.push([\n                    item['Poi Name'],\n                    item['events'],\n                    item['revenue']\n                ])\n            })\n\n            this.setState({ poi: poi });\n        })\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    render () {\n        return (\n            <MUIDataTable\n                title={'Poi-revenue list'}\n                data={this.state.poi}\n                columns={this.columns}\n                options={this.options} \n            />\n        );\n    }\n}\n","import axios from 'axios'\nimport React from 'react'\nconst { compose, withProps, withHandlers } = require(\"recompose\")\nconst {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n} = require(\"react-google-maps\")\nconst { MarkerClusterer } = require(\"react-google-maps/lib/components/addons/MarkerClusterer\")\n\nconst MapWithAMarkerClusterer = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAnKu85VSoJJASFOAP2K-sgQbsu6Hm9PoU&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withHandlers({\n        onMarkerClustererClick: () => (markerClusterer) => {\n            // const clickedMarkers = markerClusterer.getMarkers()\n        },\n    }),\n    withScriptjs,\n    withGoogleMap\n)(props =>\n    <GoogleMap\n        defaultZoom={4}\n        defaultCenter={{ lat: 43, lng: -79 }}\n    >\n        <MarkerClusterer\n        onClick={props.onMarkerClustererClick}\n        averageCenter\n        enableRetinaIcons\n        gridSize={60}\n        >\n            {props.markers.map(marker => (\n                <Marker\n                key={marker.poi_id}\n                position={{ lat: marker.lat, lng: marker.lon }}\n                />\n            ))}\n        </MarkerClusterer>\n    </GoogleMap>\n)\n\nexport default class ClusterMap extends React.PureComponent {\n    poi_url = 'https://xianliflc-ws-product-python.glitch.me/poi?include=revenue,events'\n    default_min_revenue = 0\n    default_max_revenue = 1000000000\n    default_min_events = 0\n    default_max_events = 1000000000\n\n    constructor(props) {\n        super(props);\n        this.max_revenue_ref = React.createRef();\n        this.min_revenue_ref = React.createRef();\n        this.max_events_ref = React.createRef();\n        this.min_events_ref = React.createRef();\n        this.filterServer = this.filterServer.bind(this)\n\n    }\n    \n    componentWillMount() {\n        this.setState({ markers: [] })\n    }\n\n    componentDidMount() {\n        this.getData(\n            this.default_min_revenue,\n            this.default_max_revenue,\n            this.default_min_events,\n            this.default_max_events\n        )\n    }\n\n    getData(min_revenue, max_revenue, min_events, max_events) {\n        axios.get(`${this.poi_url}&min_revenue=${min_revenue}&max_revenue=${max_revenue}&min_events=${min_events}&max_events=${max_events}`)\n        .then(res => {\n            if (res.data.data.error) {\n                alert(JSON.stringify(res.data.data.error))\n                console.error(res.data.data.error )\n            }\n            this.setState({ markers: res.data.data })\n        })\n    }\n\n    filterServer(e) {\n        e.preventDefault()\n        this.getData(\n \n            isNaN(parseInt(this.min_revenue_ref.current.value)) ? this.default_min_revenue : parseInt(this.min_revenue_ref.current.value),\n            isNaN(parseInt(this.max_revenue_ref.current.value))? this.default_max_revenue : parseInt(this.max_revenue_ref.current.value),\n            isNaN(parseInt(this.min_events_ref.current.value)) ? this.default_min_events : parseInt(this.min_events_ref.current.value),\n            isNaN(parseInt(this.max_events_ref.current.value)) ? this.default_max_events: parseInt(this.max_events_ref.current.value)\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.filterServer}>\n                    Min revenue <input type=\"text\" ref={this.min_revenue_ref} />\n                    Max revenue <input type=\"text\" ref={this.max_revenue_ref} />\n                    Min events <input type=\"text\" ref={this.min_events_ref} />\n                    Max events <input type=\"text\" ref={this.max_events_ref} />\n                    <button type=\"submit\"> Submit </button>\n                </form>\n                <MapWithAMarkerClusterer markers={this.state.markers} />\n            </div>\n        )\n    }\n}","\nimport composed from './Composed'\nimport ComparedMetrics from './ComparedMetrics'\nimport DataTable from './DataTable'\nimport ClusterMap from './ClusterMap'\n\nexport default {\n    composedWrapper: {\n        composed,\n        ComparedMetrics,\n    },\n    dataTableWapper: {\n        DataTable,\n    },\n    clusterMap: {\n        ClusterMap\n    }\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport components from './component/index';\n\nclass App extends Component {\n  static propTypes = {\n    params: PropTypes.object,\n    location: PropTypes.object,\n  };\n\n  renderList() {\n    const items = Object.keys(components).map(key => {\n      const group = components[key];\n      const list = Object.keys(group).map((c) => {\n        return (\n          <li key={`component-${c}`}>\n            <Link to={{ pathname: '/', search: `?group=${key}&component=${c}` }}>{c}</Link>\n          </li>\n        );\n      });\n\n      return (\n        <div key={`group-${key}`} className=\"component-list-container\">\n          <p className=\"group-name\">{key}</p>\n          <ul className=\"component-list\">\n            {list}\n          </ul>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"component-list-wrapper\">\n        <p className=\"title\">components</p>\n        {items}\n      </div>\n    );\n  }\n\n  renderPageDetail(group, page) {\n    return (\n      <div className=\"component-wrapper\">\n        <p className=\"back\"><Link to={{ pathname: '/' }}>Back to homepage</Link></p>\n        <p className=\"title\">{page}</p>\n        {\n          components[group] &&\n          components[group][page] ? React.createElement(components[group][page]) : null\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const { location } = this.props;\n    const { search } = location;\n    const group = /group=([a-zA-Z]+)/.exec(search);\n    const component = /component=([a-zA-Z]+)/.exec(search);\n\n    if (group && group.length === 2 && component && component.length === 2) {\n      return this.renderPageDetail(group[1], component[1]);\n    }\n\n    return this.renderList();\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render((\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  ), document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}